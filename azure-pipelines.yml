trigger:
  branches:
    include:
      - develop

pr:
  branches:
    include:
      - develop

stages:
- stage: Prepare
  jobs:
  - job: SetEnvironment
    displayName: 'Determine Target Environment'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        echo "Fetching the pull request title..."
        prTitle="$(System.PullRequest.Title)"  # Correctly access the variable
        echo "Pull Request Title: $prTitle"
        
        if [[ "$prTitle" == *"deploy to dev"* ]]; then
          echo "##vso[task.setvariable variable=targetEnvironment;isOutput=true]dev"
        elif [[ "$prTitle" == *"deploy to qa"* ]]; then
          echo "##vso[task.setvariable variable=targetEnvironment;isOutput=true]qa"
        elif [[ "$prTitle" == *"deploy to stage"* ]]; then
          echo "##vso[task.setvariable variable=targetEnvironment;isOutput=true]stage"
        else
          echo "##vso[task.setvariable variable=targetEnvironment;isOutput=true]none"
        fi
      displayName: 'Set Deployment Environment'

- stage: Deploy
  dependsOn: Prepare
  jobs:
  - job: DeployDev
    displayName: 'Deploy to Dev Environment'
    condition: eq(dependencies.Prepare.SetEnvironment.outputs['targetEnvironment'], 'dev')
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      - group: dev-grp  # Load Dev-specific variable group
    steps:
    - script: |
        echo "Deploying to Dev environment"
        echo "Initializing Terraform..."
        cd env/dev
        terraform init

        echo "Planning Terraform deployment..."
        terraform plan -out=tfplan

        echo "Applying Terraform plan..."
        terraform apply -auto-approve tfplan
      env:
        AWS_ACCESS_KEY_ID: $(aws_access_key)
        AWS_SECRET_ACCESS_KEY: $(aws_secret_key)

  - job: DeployQa
    displayName: 'Deploy to QA Environment'
    condition: eq(dependencies.Prepare.SetEnvironment.outputs['targetEnvironment'], 'qa')
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      - group: qa-grp  # Load QA-specific variable group
    steps:
    - script: |
        echo "Deploying to QA environment"
        echo "Initializing Terraform..."
        cd env/qa
        terraform init

        echo "Planning Terraform deployment..."
        terraform plan -out=tfplan

        echo "Applying Terraform plan..."
        terraform apply -auto-approve tfplan
      env:
        AWS_ACCESS_KEY_ID: $(aws_access_key)
        AWS_SECRET_ACCESS_KEY: $(aws_secret_key)

  - job: DeployStage
    displayName: 'Deploy to Stage Environment'
    condition: eq(dependencies.Prepare.SetEnvironment.outputs['targetEnvironment'], 'stage')
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      - group: stg-grp  # Load Stage-specific variable group
    steps:
    - script: |
        echo "Deploying to Stage environment"
        echo "Initializing Terraform..."
        cd env/stage
        terraform init

        echo "Planning Terraform deployment..."
        terraform plan -out=tfplan

        echo "Applying Terraform plan..."
        terraform apply -auto-approve tfplan
      env:
        AWS_ACCESS_KEY_ID: $(aws_access_key)
        AWS_SECRET_ACCESS_KEY: $(aws_secret_key)
