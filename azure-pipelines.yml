trigger:
- main

variables:
  - group: abc  # Ensure this variable group contains the variables 'cidr_block' and 'region'

stages:
- stage: Tf_Validation
  displayName: Terraform Init and Validate
  jobs:
  - job: terraformsetup
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: 'latest'  # Install the latest version of Terraform

    - script: |
        # Check the Terraform version
        terraform --version
    - task: TerraformTaskV4@4
      displayName: 'Terraform Init'
      inputs:
        provider: 'aws'
        command: 'init'
        backendServiceAWS: 'aws-to-tf'
        backendAWSBucketName: 'for-tf-use'
        backendAWSKey: 'modules/terraform.tfstate'

    - task: TerraformTaskV4@4
      displayName: 'Terraform Validate'
      inputs:
        provider: 'aws'
        command: 'validate'

    - task: TerraformTaskV4@4
      displayName: 'Terraform Plan'
      inputs:
        provider: 'aws'
        command: 'plan'
        environmentServiceNameAWS: 'aws-to-tf'

    - task: CopyFiles@2
      inputs:
        Contents: |
          main.tf
          provider.tf
          variables.tf
        TargetFolder: '$(build.artifactstagingdirectory)'
      displayName: 'Copy tfvars and .tf files'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'  # Publish the working directory where Terraform files are located
        ArtifactName: 'terraform-modules'
        publishLocation: 'Container'